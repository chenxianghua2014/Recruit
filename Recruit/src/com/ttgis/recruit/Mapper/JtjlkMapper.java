package com.ttgis.recruit.Mapper;

import java.util.List;
import java.util.Map;

import com.ttgis.recruit.domain.Jtjlk;
import com.ttgis.recruit.domain.Msg;
import com.ttgis.recruit.domain.MyApplication;
import com.ttgis.recruit.domain.QueryJtjlk;

public interface JtjlkMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(String jtjlkId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	int insert(Jtjlk record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	int insertSelective(Jtjlk record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	Jtjlk selectByPrimaryKey(String jtjlkId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(Jtjlk record);

	int updateCpcj(Jtjlk record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table JTJLK
	 * 
	 * @mbggenerated
	 */
	int updateByPrimaryKey(Jtjlk record);

	List<Jtjlk> selectByWhere(QueryJtjlk p);

	List<Jtjlk> selectByMsqId(String msqId);

	int selectCount(QueryJtjlk p);

	List<Jtjlk> selectJtjlkByWhere(QueryJtjlk p);

	int selectJtjlkCount(QueryJtjlk p);

	List<Jtjlk> selectStatusByUserId(String strUserId);

	List<Jtjlk> selectSameGw(Jtjlk record);

	List<Jtjlk> selectByJlzt(Map<String, String> s);

	Jtjlk queryKsByName(String JtjlkName);

	List<MyApplication> selectMyApplication(String userId);

	List<Jtjlk> selectIsExist(Map<String, String> s);

	List<Jtjlk> selectCanCollection(Map<String, String> s);

	Jtjlk CheckCpResult(Map<String, String> map);

	List<Jtjlk> selectBySfzh(String sfzh);

	List<Jtjlk> selectBdwjlkByWhere(QueryJtjlk q);

	List<Jtjlk> selectJtjlkByWhere2Level(QueryJtjlk q);

	Jtjlk selectJtjlkById(Msg msg);
	
	List<Jtjlk> selectJtjlkByWhere3Level(QueryJtjlk q);

	int selectBdwJtjlkCount(QueryJtjlk q);

	int selectBdwAndXsdwJtjlkCount(QueryJtjlk q);

	int selectBdwAndXsdwJtjlkLevel3Count(QueryJtjlk q);
		
	int updateStar(QueryJtjlk q);
}