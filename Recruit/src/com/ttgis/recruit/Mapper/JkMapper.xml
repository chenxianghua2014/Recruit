<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ttgis.recruit.Mapper.JkMapper" >
  <resultMap id="BaseResultMap" type="com.ttgis.recruit.domain.Jk" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="JK_ID" property="jkId" jdbcType="VARCHAR" />
    <result column="JK_NAME" property="jkName" jdbcType="VARCHAR" />
    <result column="JK_ADDTIME" property="jkAddtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    JK_ID, JK_NAME, JK_ADDTIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from JK
    where JK_ID = #{jkId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from JK
    where JK_ID = #{jkId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ttgis.recruit.domain.Jk" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into JK (JK_ID, JK_NAME, JK_ADDTIME
      )
    values (#{jkId,jdbcType=VARCHAR}, #{jkName,jdbcType=VARCHAR}, #{jkAddtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ttgis.recruit.domain.Jk" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into JK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jkId != null" >
        JK_ID,
      </if>
      <if test="jkName != null" >
        JK_NAME,
      </if>
      <if test="jkAddtime != null" >
        JK_ADDTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jkId != null" >
        #{jkId,jdbcType=VARCHAR},
      </if>
      <if test="jkName != null" >
        #{jkName,jdbcType=VARCHAR},
      </if>
      <if test="jkAddtime != null" >
        #{jkAddtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ttgis.recruit.domain.Jk" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update JK
    <set >
      <if test="jkName != null" >
        JK_NAME = #{jkName,jdbcType=VARCHAR},
      </if>
      <if test="jkAddtime != null" >
        JK_ADDTIME = #{jkAddtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where JK_ID = #{jkId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ttgis.recruit.domain.Jk" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update JK
    set JK_NAME = #{jkName,jdbcType=VARCHAR},
      JK_ADDTIME = #{jkAddtime,jdbcType=TIMESTAMP}
    where JK_ID = #{jkId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectCount" resultType="java.lang.Integer"
		parameterType="com.ttgis.recruit.domain.QueryJk">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*)
		from JK 
		where 1=1
		<trim suffixOverrides=",">
			<if test="jkName != null and jkName != ''">
				and JK_NAME like '%${jkName}%'
			</if>
		</trim>
	</select>
	<select id="selectByWhere" resultMap="BaseResultMap"
		parameterType="com.ttgis.recruit.domain.QueryJk">
		select JK_ID, JK_NAME, JK_ADDTIME,(Select CONVERT(VARCHAR(100), JK_ADDTIME, 20) ) tjsj
		from (select top ${currentPageSize} *
		from (select
		top(${pageNum}*${pageSize}) * from JK T where
		1=1
		<trim suffixOverrides=",">
			<if test="jkName != null and jkName != ''">
				and JK_NAME like '%${jkName}%'
			</if>
		</trim>
		order by T.JK_ID asc ) as t1
		order by JK_ID asc) as t2
		order by
		JK_ID asc
	</select>
</mapper>